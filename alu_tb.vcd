$date
	Fri May 16 09:38:57 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 1 ! zero $end
$var wire 64 " result [63:0] $end
$var reg 64 # A [63:0] $end
$var reg 64 $ B [63:0] $end
$var reg 4 % alu_op [3:0] $end
$var reg 1 & clk $end
$scope module uut $end
$var wire 64 ' A [63:0] $end
$var wire 64 ( B [63:0] $end
$var wire 4 ) alu_op [3:0] $end
$var wire 1 ! zero $end
$var parameter 4 * OP_ADD $end
$var parameter 4 + OP_AND $end
$var parameter 4 , OP_CPZ $end
$var parameter 4 - OP_ORR $end
$var parameter 4 . OP_SUB $end
$var reg 64 / result [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b110 .
b1 -
b111 ,
b0 +
b10 *
$end
#0
$dumpvars
b0 /
b0 )
b0 (
b0 '
0&
b0 %
b0 $
b0 #
b0 "
1!
$end
#100
b111100001111 $
b111100001111 (
b1111000011110000 #
b1111000011110000 '
#200
0!
b1111111111111111 "
b1111111111111111 /
b1 %
b1 )
#300
b1000 "
b1000 /
b10 %
b10 )
b11 $
b11 (
b101 #
b101 '
#400
1!
b0 "
b0 /
b0 $
b0 (
b0 #
b0 '
#500
b110 %
b110 )
b101 $
b101 (
b101 #
b101 '
1&
#600
0!
b1111111111111111111111111111111111111111111111111111111111111110 "
b1111111111111111111111111111111111111111111111111111111111111110 /
b11 #
b11 '
#700
b101010 "
b101010 /
b1 %
b1 )
b0 $
b0 (
b101010 #
b101010 '
#800
b1 "
b1 /
b1 $
b1 (
b0 #
b0 '
#900
1!
b0 "
b0 /
b1111 %
b1111 )
b10100 $
b10100 (
b1010 #
b1010 '
#1000
0!
b1010 "
b1010 /
b111 %
b111 )
b0 $
b0 (
0&
#1100
1!
b0 "
b0 /
b0 #
b0 '
#1200
