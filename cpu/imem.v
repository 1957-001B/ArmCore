// instruction_memory.v

module imem (
input wire [63:0] address, // reads from PC
output wire [31:0] instruction // reads from memory the instruction 
);
  localparam MEMSIZE = 1024; // 1024 Instructions ~ 1024*4 = 4Kib
  localparam INSTRUCTION_N = 8;
  reg [31:0] i_mem[0:MEMSIZE-1];

initial
  begin 
    // Using assembly generated by my minimal rust assembler (https://github.com/1957-001B/ArmAsm)

    i_mem[0] = 32'hd2800088;
    i_mem[1] = 32'hd2800020;
    i_mem[2] = 32'h58000081;
    i_mem[3] = 32'hd28001a2;
    i_mem[4] = 32'hd4000001;
    i_mem[5] = 32'hd2800028;
    i_mem[6] = 32'hd2800000;
    i_mem[7] = 32'hd4000001;

    for (integer i = INSTRUCTION_N; i < MEMSIZE; i = i+1) begin
      i_mem[i] = 32'hd540643f;
    end

  end

  assign instruction = i_mem[address[11:2]]; //right shifted twice to align with the 4 bit instuctions (i.e divide by 4)

endmodule
